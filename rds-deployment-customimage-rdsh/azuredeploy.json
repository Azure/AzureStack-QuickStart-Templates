{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adDomainName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AD domain. For example contoso.com"
      },
      "defaultValue": "contoso.com"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example johnadmin"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
    "imageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "Windows server SKU"
      },
      "defaultValue": "2012-R2-Datacenter"
    },
    "rdshImageStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "This is the name of the your storage account where you stored the os custom image you want to use for rdsh machines. For example johnrdshstore"
            }
        },
    "rdshsourceImageVhdUri": {
        "type": "string",
        "metadata": {
            "description": "The URI for source of the blob containing the custom image. For example https://johnrdshstore.blob.core.windows.net/johncontainer/MyWindowServerOS.vhd"
        }
    },
    "numberOfRdshInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of RDSH instances"
      }
    }
  },
  "variables": {
    "dnsLabelPrefix": "[concat('dns', resourceGroup().name)]",
    "rdshVmSize":  "Standard_A2",
    "storageAccountName": "[concat('sa', resourceGroup().name)]",
    "storageAccountType": "Standard_LRS",
    "uniqueStorageAccountContainerName": "[concat('sc', resourceGroup().name)]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "adVnetName": "[concat('ADVNET',resourceGroup().name)]",
    "adSubnetName": "[concat('ADStaticSubnet',resourceGroup().name)]",
    "vnetAddressRange": "10.0.0.0/16",
    "subnetAddressRange": "10.0.0.0/24",
    "dnsServerPrivateIp": "10.0.0.4",
    "DNSIP": "192.168.100.2",
    "subnet-id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('adVnetName')),'/subnets/',variables('adSubnetName'))]",
    "publicIpRef": "publicIp",
    "assetLocation": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/rds-deployment/",
    "apiVersion": "2015-06-15",
    "apiVersionNRP": "2015-05-01-preview"
  },
    "resources": [
        {
            "apiVersion": "[variables('apiVersionNRP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpRef')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/availabilitySets",
          "name": "gw-availabilityset",
          "location": "[resourceGroup().location]"
        },
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/availabilitySets",
          "name": "cb-availabilityset",
          "location": "[resourceGroup().location]"
        },
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/availabilitySets",
          "name": "rdsh-availabilityset",
          "location": "[resourceGroup().location]"
        },
        {
            "apiVersion": "[variables('apiVersionNRP')]",
            "type": "Microsoft.Network/loadBalancers",
            "name": "loadBalancer",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIpRef'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LBFE",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpRef'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LBBAP"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "https",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "gateway",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
                            },
                            "protocol": "udp",
                            "frontendPort": 3391,
                            "backendPort": 3391,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersionNRP')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "gw-nic",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Network/loadBalancers/loadBalancer"
            ],
            "properties": {
              "ipConfigurations": [
                {
                  "name": "ipconfig",
                  "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                      "id": "[variables('subnet-id')]"
                    },
                    "loadBalancerBackendAddressPools": [
                      {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
                      }
                    ],
                    "loadBalancerInboundNatRules": [
                      {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/https')]"
                      },
                      {
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/gateway')]"
                      }
                    ]
                  }
                }
              ],
              "dnsSettings": {
              "dnsServers": [
                "[variables('dnsServerPrivateIp')]",
                "[variables('DNSIP')]"
              ]
            }
            }
        },
        {
            "apiVersion": "[variables('apiVersionNRP')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "cb-nic",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Network/loadBalancers/loadBalancer"
            ],
            "properties": {
              "ipConfigurations": [
                {
                  "name": "ipconfig",
                  "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                      "id": "[variables('subnet-id')]"
                    }
                  }
                }
              ],
              "dnsSettings": {
              "dnsServers": [
                "[variables('dnsServerPrivateIp')]",
                "[variables('DNSIP')]"
              ]
            }
            }
        },
        {
            "apiVersion": "[variables('apiVersionNRP')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('rdsh-', copyindex(), '-nic')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "rdsh-nic-loop",
                "count": "[parameters('numberOfRdshInstances')]"
            },
            "dependsOn": [
                "Microsoft.Network/loadBalancers/loadBalancer"
            ],
            "properties": {
              "ipConfigurations": [
                {
                  "name": "ipconfig",
                  "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                      "id": "[variables('subnet-id')]"
                    }
                  }
                }
              ],
              "dnsSettings": {
              "dnsServers": [
                "[variables('dnsServerPrivateIp')]",
                "[variables('DNSIP')]"
              ]
            }
            }
        },
         {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "gw-vm",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]",
        "Microsoft.Network/networkInterfaces/gw-nic"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]"
        },
        "osProfile": {
          "computerName": "gateway",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','gw-vm-os-disk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','gw-nic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "gw-vm/gateway",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'gw-vm')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\Gateway",
              "Properties": {
                "DomainName": "[parameters('adDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('rdsh-', copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "rdsh-vm-loop",
        "count": "[parameters('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "Microsoft.Compute/virtualMachines/gw-vm/extensions/gateway",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'rdsh-', copyindex(), '-nic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('rdshVmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[concat('rdsh-', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "osdisk",
            "osType": "Windows",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[parameters('rdshsourceImageVhdUri')]"
            },
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('rdshImageStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','rdsh-',copyindex(),'-os-disk.vhd')]"
            }
          }
        },
        "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',parameters('rdshImageStorageAccountName'),'.blob.azurestack.local')]"
                    }
                },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('rdsh-', copyindex(), '-nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat('rdsh-', copyindex(),'/sessionhost')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat('rdsh-', copyindex()))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\SessionHost",
              "Properties": {
                "DomainName": "[parameters('adDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "cb-vm",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]",
        "Microsoft.Network/networkInterfaces/cb-nic",
        "rdsh-vm-loop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]"
        },
        "osProfile": {
          "computerName": "broker",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','cb-vm-os-disk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','cb-nic')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "cb-vm/rdsdeployment",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'cb-vm')]",
        "Microsoft.Compute/virtualMachines/gw-vm/extensions/gateway",
        "rdsh-vm-loop"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.11",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
          "ConfigurationFunction": "Configuration.ps1\\RDSDeployment",
          "Properties": {
            "adminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:adminPassword"
            },
            "connectionBroker": "[concat('broker.',parameters('adDomainName'))]",
            "domainName": "[parameters('adDomainName')]",
            "externalfqdn": "[concat('gateway.',parameters('adDomainName'))]",
            "numberOfRdshInstances": "[parameters('numberOfRdshInstances')]",
            "sessionHostNamingPrefix": "rdsh-",
            "webAccessServer": "[concat('gateway.',parameters('adDomainName'))]"
          }
        },
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    }
    ]
}