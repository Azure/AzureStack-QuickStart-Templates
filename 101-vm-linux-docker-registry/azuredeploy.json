{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "local",
            "metadata": {
                "description": "Location name of the target Azure Stack instance."
            }
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "registry-vm",
            "metadata": {
                "description": "Name of the VM resource to create. Will be reused as the prefix for the other resources to create."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS11_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account name."
            }
        },
        "storageAccountContainerName": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "storageAccountRealm": {
            "type": "string",
            "metadata": {
                "description": "The storage account real."
            }
        },
        "storageAccountKey": {
            "type": "string",
            "metadata": {
                "description": "The storage account access key."
            }
        },
        "domainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The VM's DNS label."
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "172.16.0.0/24",
            "metadata": {
                "description": "The VNET address prefix."
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "172.16.0.0/24",
            "metadata": {
                "description": "The subnet address prefix."
            }
        },
        "keyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "certificateUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "certificateFingerprint": {
            "type": "string",
            "metadata": {
                "description": "The fingerprint of the .crt file."
            }
        }
    },
    "variables": {
        "vnetName": "[concat(parameters('virtualMachineName'),'-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "nicName": "[concat(parameters('virtualMachineName'),'-nic')]",
        "nsgName": "[concat(parameters('virtualMachineName'),'-nsg')]",
        "pipName": "[concat(parameters('virtualMachineName'),'-pip')]",
        "provisionScriptParameters": "[concat('ADMIN_USER_NAME=', parameters('adminUsername'),' REGISTRY_STORAGE_AZURE_ACCOUNTNAME=', parameters('storageAccountName'),' REGISTRY_STORAGE_AZURE_ACCOUNTKEY=', parameters('storageAccountKey'),' REGISTRY_STORAGE_AZURE_CONTAINER=', parameters('storageAccountContainerName'),' REGISTRY_STORAGE_AZURE_REALM=', parameters('storageAccountRealm'),' CERT_FINGERPRINT=', parameters('certificateFingerprint'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachineName')]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('keyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('certificateUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[parameters('virtualMachineName')]"
            ],
            "location": "[parameters('location')]",
            "name": "[concat(parameters('virtualMachineName'), '/cse')]",
            "properties": {
                "protectedSettings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/101-vm-linux-docker-registry/script.sh"
                    ],
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' ./script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[variables('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('domainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTP",
                        "properties": {
                            "priority": 300,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80"
                        }
                    },
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    },
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 340,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}