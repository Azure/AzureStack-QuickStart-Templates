{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
	"vmNamePrefix": {
	  "type": "string",
	  "metadata": {
		"description": "The Prefix of the VM Name"
	  },
	  "defaultValue": "TAVM"
	},

	"windowsImagePublisher": {
	  "type": "string",
	  "metadata": {
		"description": "The Publisher of Windows Image"
	  },
	  "defaultValue": "MicrosoftWindowsServer"
	},
	"windowsImageOffer": {
	  "type": "string",
	  "metadata": {
		"description": "The offer of Windows Image"
	  },
	  "defaultValue": "WindowsServer"
	},
	"windowsImageSKU": {
	  "type": "string",
	  "metadata": {
		"description": "The SKU Name of Windows Image"
	  },
	  "defaultValue": "2012-R2-Datacenter"
	},

	"windowsImageVersion": {
	  "type": "string",
	  "metadata": {
		"description": "The Version of Windows Image"
	  },
	  "defaultValue": "latest"
	},

	"storageAccount": {
	  "type": "string",
	  "metadata": {
		"description": "The Storage Account Name"
	  }
	},

	"storageAccountType": {
	  "type": "string",
	  "allowedValues": [
		"Standard_LRS",
		"Premium_LRS"
	  ],
	  "metadata": {
		"description": "The type of the Storage Account created"
	  },
		"defaultValue": "Standard_LRS" 
	},

	"adminUsername": {
	  "type": "string",
	  "metadata": {
		"description": "The name of the Administrator of the new VMs and Domain"
	  }
	},
	"adminPassword": {
	  "type": "securestring",
	  "metadata": {
		"description": "The password for the Administrator account of the new VMs and Domain"
	  }
	},

	"vmSize": {
	  "type": "string",
	  "allowedValues": [
		"Standard_D1",
		"Standard_DS1",
		"Standard_D2",
		"Standard_DS2",
		"Standard_D3",
		"Standard_A1",
		"Standard_A2",
		"Standard_A3",
		"Standard_DS3",
		"Standard_D4",
		"Standard_DS4",
		"Standard_D11",
		"Standard_DS11",
		"Standard_D12",
		"Standard_DS12",
		"Standard_D13",
		"Standard_DS13",
		"Standard_D14",
		"Standard_DS14"
	  ],
	  "metadata": {
		"description": "The size of the VM to be created"
	  },
	  "defaultValue": "Standard_A2"
	},

	"subnetResourceId": {
	  "type": "string",
	  "metadata": {
		"description": "Resource id to the subnet to which the VM will be connected"
	  }
	},

	"dataDiskSize": {
	  "type": "int",
	  "metadata": {
		"description": "Size of the data disks"
	  },
	  "defaultValue": 10
	},
	
	"currentIndex": {
	  "type": "int",
	  "metadata": {
		"description": "Number of the current VM being deployed by the overall template (used for resource naming)"
	  }
	}
  },
  "variables": {
	
	"TANicName": "TA-Nic-",
	"vmContainerName": "vhds"
	
  },
  "resources": [
	{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(parameters('storageAccount'), parameters('currentIndex'))]",
			"apiVersion": "2015-05-01-preview",
			"location": "[resourceGroup().location]",
			"properties": {
			"accountType": "[parameters('storageAccountType')]"
			}
		},
	{
			"name": "[concat(variables('TANicName'), parameters('currentIndex'))]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2015-05-01-preview",
			"dependsOn": [
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('subnetResourceId')]"
							}
						}
					}
				]
			}
		},
	{
			"apiVersion": "2015-06-15",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(parameters('vmNamePrefix'), parameters('currentIndex'))]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(parameters('storageAccount'), parameters('currentIndex')))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('TANicName'), parameters('currentIndex')))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[concat(parameters('vmNamePrefix'), parameters('currentIndex'))]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('windowsImagePublisher')]",
						"offer": "[parameters('windowsImageOffer')]",
						"sku": "[parameters('windowsImageSKU')]",
						"version": "[parameters('windowsImageVersion')]"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',parameters('storageAccount'),parameters('currentIndex')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('vmContainerName'),'/', parameters('vmNamePrefix'), parameters('currentIndex'),'-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/',parameters('storageAccount'),parameters('currentIndex')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('vmContainerName'),'/', parameters('vmNamePrefix'), parameters('currentIndex'),'data-1.vhd')]"
							},
							"name":"[concat(parameters('vmNamePrefix'), parameters('currentIndex'),'data-1.vhd')]",
							"caching" : "None",
							"createOption": "empty",
							"diskSizeGB": "[parameters('dataDiskSize')]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('TANicName'), parameters('currentIndex')))]"
						}
					]
				}
			}
		}
  ],
	"outputs": {
	}
}
