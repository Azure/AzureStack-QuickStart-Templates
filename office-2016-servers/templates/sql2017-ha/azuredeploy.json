{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-03-01-hybrid",
    "parameters": {
        "SqlAvailabilitySetName": {
            "defaultValue": "SqlAvSet",
            "type": "String",
            "metadata": {
                "description": "The name of availability set for Sql Server AO"
            }
        },
        "domainName": {
            "defaultValue": "contoso.com",
            "type": "String",
            "metadata": {
                "description": "The domain name needs to be consisting of one or more labels separated by . E.g. contoso.com"
            }
        },
        "workloadsLocation": {
            "defaultValue": "https://colab.blob.local.azurestack.external/workload",
            "type": "String",
            "metadata": {
                "description": "Location of workloads"
            }
        },
        "vmPrefix": {
            "defaultValue": "srv",
            "type": "String",
            "minLength": 3,
            "maxLength": 8,
            "metadata": {
                "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
            }
        },
        "adminUsername": {
            "defaultValue": "lcladmin",
            "type": "String",
            "metadata": {
                "description": "The name of the Administrator of the new VMs and Domain"
            }
        },
        "WitnessUnc": {
            "type": "String",
            "metadata": {
                "description": "The UNC path of witness"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "The password for the Administrator account of the new VMs and Domain"
            }
        },
        "sqlAuthUserName": {
            "type": "string",
            "metadata": {
                "description": "The SQL Server Auth Account name"
            },
            "defaultValue": "sqlsa"
        },
        "sqlAuthPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The SQL Server Auth Account password"
            }
        },
        "sqlServerServiceAccountUserName": {
            "type": "string",
            "metadata": {
                "description": "The SQL Server Service Account name"
            },
            "defaultValue": "sqlservice"
        },
        "sqlServerServiceAccountPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The SQL Server Service Account password"
            }
        },
        "sqlAOAGName": {
            "type": "string",
            "metadata": {
                "description": "The Sql AlwaysOn Group Name"
            },
            "defaultValue": "alwayson-ag"
        },
        "sqlAOListenerPort": {
            "type": "string",
            "metadata": {
                "description": "The Sql AG Listener port"
            },
            "defaultValue": "1433"
        },
        "sqlAOListenerName": {
            "type": "string",
            "metadata": {
                "description": "The Sql AG Listener Name"
            },
            "defaultValue": "aon-listener",
            "maxLength": 15
        },
        "lbIpAddress": {
            "type": "string",
            "metadata": {
                "description": "The ip address of load balancer for AO"
            },
            "defaultValue": "10.0.0.180"
        },
        "sizeInGb": {
            "type": "int",
            "minValue": 50,
            "maxValue": 500,
            "defaultValue": 50,
            "metadata": {
                "description": "Size of each stripe disk"
            }
        },
        "diagnosticsStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of diagnostic storage account"
            }
        },
        "storageAccountEndPoint": {
            "type": "string",
            "defaultValue": "local.azurestack.external",
            "metadata": {
                "description": "Endpoint domain"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS4",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "[concat('ADStaticSubnet',resourceGroup().name)]",
            "metadata": {
                "description": "The subnet name."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "[concat('ADVNET',resourceGroup().name)]",
            "metadata": {
                "description": "The virtual network name"
            }
        }
    },
    "variables": {
        "vmCount": 2,
        "sqlPrefix": "[concat(parameters('vmPrefix'),'-sql-')]",
        "storageAccountType": "Standard_LRS",
        "uniqueStorageAccountName": "[tolower(concat('sa-',variables('sqlPrefix'), resourceGroup().name))]",
        "lbName": "[tolower(concat('lb-',variables('sqlPrefix'), resourceGroup().name))]",
        "uniqueStorageAccountContainerName": "[tolower(concat('sc-',variables('sqlPrefix'), resourceGroup().name))]",
        "location": "[resourceGroup().location]",
        "vmOsDiskName": "[concat('od-',variables('sqlPrefix'))]",
        "vmDataDiskName": "[concat('dd-',variables('sqlPrefix'))]",
        "clusterName": "[concat(parameters('vmPrefix'),'-sql-fc')]",
        "modulesPath": "[concat(parameters('workloadsLocation'),'/')]",
        "vmNicName": "[tolower(concat(variables('sqlPrefix'),'nic-'))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "staticSubnetID": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
        "sqlAOPrepareModulesURL": "[concat(parameters('workloadsLocation'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
        "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
        "createClusterModulesURL": "[concat(parameters('workloadsLocation'),'/CreateFailoverCluster.ps1.zip')]",
        "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster",
        "sqlAOEPName": "[concat(parameters('vmPrefix'),'-hadr')]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
        "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
        "diagnosticStorageUrl": "[concat(parameters('diagnosticsStorageAccountName'),'.blob.',parameters('storageAccountEndPoint'))]",
        "diagnosticStorageId": "[resourceId(ResourceGroup().name, 'Microsoft.Storage/storageAccounts',parameters('diagnosticsStorageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('SqlAvailabilitySetName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 1,
                "platformFaultDomainCount": 1
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "sngsql",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgsrule",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('vmNicName'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "nicLoop",
                "count": 2
            },
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigpublic",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('staticSubnetId')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('lbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[variables('staticSubnetId')]"
                            },
                            "privateIPAddress": "[parameters('lbIpAddress')]",
                            "privateIPAllocationMethod": "Static"
                        },
                        "name": "LoadBalancerFrontend"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackendPool1"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 1433,
                            "backendPort": 1433,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 59999,
                            "intervalInSeconds": 20,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('SqlPrefix'),copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[variables('location')]",
            "copy": {
                "name": "vmLoop",
                "count": 2
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('vmNicName'),copyIndex())]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('SqlPrefix'),copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true",
                        "enableAutomaticUpdates": false
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets/', parameters('SqlAvailabilitySetName'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "SQL2017-WS2016",
                        "sku": "Enterprise",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('SqlPrefix'),copyIndex(),'-osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "createOption": "empty",
                            "lun": 0,
                            "diskSizeGB": "[parameters('sizeInGb')]",
                            "caching": "ReadOnly",
                            "name": "[concat(variables('vmDataDiskName'),'-',copyIndex(),'-datadisk-1')]",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        {
                            "createOption": "empty",
                            "lun": 1,
                            "diskSizeGB": "[parameters('sizeInGb')]",
                            "caching": "ReadOnly",
                            "name": "[concat(variables('vmDataDiskName'),'-',copyIndex(),'-datadisk-2')]",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        {
                            "createOption": "empty",
                            "lun": 2,
                            "diskSizeGB": "[parameters('sizeInGb')]",
                            "caching": "ReadOnly",
                            "name": "[concat(variables('vmDataDiskName'),'-',copyIndex(),'-datadisk-3')]",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        {
                            "createOption": "empty",
                            "lun": 3,
                            "diskSizeGB": "[parameters('sizeInGb')]",
                            "caching": "ReadOnly",
                            "name": "[concat(variables('vmDataDiskName'),'-',copyIndex(),'-datadisk-4')]",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        {
                            "createOption": "empty",
                            "lun": 4,
                            "diskSizeGB": "[parameters('sizeInGb')]",
                            "caching": "ReadOnly",
                            "name": "[concat(variables('vmDataDiskName'),'-',copyIndex(),'-datadisk-5')]",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        {
                            "createOption": "empty",
                            "lun": 5,
                            "diskSizeGB": "[parameters('sizeInGb')]",
                            "caching": "ReadOnly",
                            "name": "[concat(variables('vmDataDiskName'),'-',copyIndex(),'-datadisk-6')]",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        {
                            "createOption": "empty",
                            "lun": 6,
                            "diskSizeGB": "[parameters('sizeInGb')]",
                            "caching": "ReadOnly",
                            "name": "[concat(variables('vmDataDiskName'),'-',copyIndex(),'-datadisk-7')]",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        {
                            "createOption": "empty",
                            "lun": 7,
                            "diskSizeGB": "[parameters('sizeInGb')]",
                            "caching": "ReadOnly",
                            "name": "[concat(variables('vmDataDiskName'),'-',copyIndex(),'-datadisk-8')]",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNicName'),copyIndex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://',variables('diagnosticStorageUrl'),'/')]"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('SqlPrefix'),copyIndex(),'/IaaSDiagnostics')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "copy": {
                "name": "vmLoop",
                "count": 2
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('SqlPrefix'),copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Diagnostics",
                "type": "IaaSDiagnostics",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "StorageAccount": "[parameters('diagnosticsStorageAccountName')]",
                    "WadCfg": {
                        "DiagnosticMonitorConfiguration": {
                            "overallQuotaInMB": 5120,
                            "Metrics": {
                                "resourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', variables('SqlPrefix'),copyIndex())]",
                                "MetricAggregation": [
                                    {
                                        "scheduledTransferPeriod": "PT1H"
                                    },
                                    {
                                        "scheduledTransferPeriod": "PT1M"
                                    }
                                ]
                            },
                            "DiagnosticInfrastructureLogs": {
                                "scheduledTransferLogLevelFilter": "Error"
                            },
                            "PerformanceCounters": {
                                "scheduledTransferPeriod": "PT1M",
                                "PerformanceCounterConfiguration": [
                                    {
                                        "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\System\\Processes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Process(_Total)\\Thread Count",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Process(_Total)\\Handle Count",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\System\\System Up Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\System\\Context Switches/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\System\\Processor Queue Length",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\% Committed Bytes In Use",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Available Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Committed Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Cache Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Pages/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Page Faults/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Process(_Total)\\Working Set",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                                        "sampleRate": "PT1M"
                                    }
                                ]
                            },
                            "WindowsEventLog": {
                                "scheduledTransferPeriod": "PT1M",
                                "DataSource": [
                                    {
                                        "name": "Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                    },
                                    {
                                        "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                                    },
                                    {
                                        "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                    }
                                ]
                            }
                        }
                    }
                },
                "protectedSettings": {
                    "storageAccountName": "[parameters('diagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(variables('diagnosticStorageId'),'2015-06-15').key1]",
                    "storageAccountEndPoint": "[concat('https://',parameters('storageAccountEndPoint'),'/')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('SqlPrefix'),copyIndex(), '/SqlIaasExtension')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('SqlPrefix'),copyIndex())]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('SqlPrefix'),copyIndex(),'/extensions/','IaaSDiagnostics')]"
            ],
            "copy": {
                "name": "vmLoop",
                "count": 2
            },
            "properties": {
                "type": "SqlIaaSAgent",
                "publisher": "Microsoft.SqlServer.Management",
                "typeHandlerVersion": "1.2",
                "autoUpgradeMinorVersion": "true",
                "settings": {
                    "AutoTelemetrySettings": {
                        "Region": "[variables('location')]"
                    },
                    "AutoPatchingSettings": {
                        "PatchCategory": "WindowsMandatoryUpdates",
                        "Enable": false,
                        "DayOfWeek": "Sunday",
                        "MaintenanceWindowStartingHour": "2",
                        "MaintenanceWindowDuration": "60"
                    },
                    "KeyVaultCredentialSettings": {
                        "Enable": false,
                        "CredentialName": ""
                    },
                    "ServerConfigurationsManagementSettings": {
                        "SQLConnectivityUpdateSettings": {
                            "ConnectivityType": "Private",
                            "Port": 1433
                        },
                        "SQLWorkloadTypeUpdateSettings": {
                            "SQLWorkloadType": "OLTP"
                        },
                        "SQLStorageUpdateSettings": {
                            "DiskCount": 8,
                            "NumberOfColumns": 8,
                            "StartingDeviceID": 2,
                            "DiskConfigurationType": "NEW"
                        },
                        "AdditionalFeaturesServerConfigurations": {
                            "IsRServicesEnabled": "false"
                        }
                    }
                },
                "protectedSettings": {
                    "SQLAuthUpdateUserName": "[parameters('SqlAuthUserName')]",
                    "SQLAuthUpdatePassword": "[parameters('SqlAuthPassword')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('SqlPrefix'),'0/sqlAOPrepare')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('SqlPrefix'),'0','/extensions/','SqlIaasExtension')]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('SqlPrefix'),'1','/extensions/','SqlIaasExtension')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.76",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesURL": "[variables('sqlAOPrepareModulesURL')]",
                    "configurationFunction": "[variables('sqlAOPrepareConfigurationFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "sqlAlwaysOnEndpointName": "[variables('sqlAOEPName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "privateSettingsRef:AdminPassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('sqlServerServiceAccountUserName')]",
                            "password": "privateSettingsRef:SqlServerServiceAccountPassword"
                        },
                        "NumberOfDisks": 2,
                        "WorkloadType": "OLTP",
                        "BaseUrl": "[variables('modulesPath')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('sqlPrefix'),'1/configuringAlwaysOn')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('SqlPrefix'),'0','/extensions/','sqlAOPrepare')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.76",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesURL": "[variables('createClusterModulesURL')]",
                    "configurationFunction": "[variables('createClusterConfigurationFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "clusterName": "[variables('clusterName')]",
                        "sharePath": "[parameters('WitnessUnc')]",
                        "nodes": [
                            "[concat(variables('sqlPrefix'),'0')]",
                            "[concat(variables('sqlPrefix'),'1')]"
                        ],
                        "sqlAlwaysOnEndpointName": "[variables('sqlAOEPName')]",
                        "sqlAlwaysOnAvailabilityGroupName": "[parameters('sqlAOAGName')]",
                        "sqlAlwaysOnAvailabilityGroupListenerName": "[parameters('sqlAOListenerName')]",
                        "SqlAlwaysOnAvailabilityGroupListenerPort": "[parameters('sqlAOListenerPort')]",
                        "databaseNames": "testHA",
                        "lbName": "[variables('lbName')]",
                        "lbAddress": "[parameters('lbIpAddress')]",
                        "primaryReplica": "[concat(variables('sqlPrefix'),'1')]",
                        "secondaryReplica": "[concat(variables('sqlPrefix'),'0')]",
                        "dnsServerName": "",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "privateSettingsRef:adminPassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('sqlServerServiceAccountUserName')]",
                            "password": "privateSettingsRef:sqlServerServiceAccountPassword"
                        },
                        "SQLAuthCreds": {
                            "userName": "sqlsa",
                            "password": "privateSettingsRef:sqlAuthPassword"
                        },
                        "NumberOfDisks": 2,
                        "WorkloadType": "OLTP",
                        "BaseUrl": "[variables('modulesPath')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]",
                        "sqlAuthPassword": "[parameters('sqlServerServiceAccountPassword')]"
                    }
                }
            }
        }
    ]
}