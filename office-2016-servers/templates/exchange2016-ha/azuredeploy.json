{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-03-01-hybrid",
    "parameters": {
        "ExchangeAvailabilitySetName": {
            "defaultValue": "ExAvSet",
            "type": "String",
            "metadata": {
                "description": "The name of availability set for Exchange"
            }
        },
        "domainName": {
            "defaultValue": "contoso.com",
            "type": "String",
            "metadata": {
                "description": "The domain name needs to be consisting of one or more labels separated by . E.g. contoso.com"
            }
        },
        "workloadsLocation": {
            "defaultValue": "https://colab.blob.local.azurestack.external/workload",
            "type": "String",
            "metadata": {
                "description": "Location of workloads"
            }
        },
        "exchangeIsoUrl": {
            "defaultValue": "https://colab.blob.local.azurestack.external/workload/ExchangeServer2016-x64-cu10.iso",
            "type": "String",
            "metadata": {
                "description": "Location of Exchange ISO"
            }
        },
        "licensekey": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "License for Enterprise features ( required )"
            }
        },
        "vmPrefix": {
            "defaultValue": "srv",
            "type": "String",
            "minLength": 3,
            "maxLength": 8,
            "metadata": {
                "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
            }
        },
        "adminUsername": {
            "defaultValue": "lcladmin",
            "type": "String",
            "metadata": {
                "description": "The name of the Administrator of the new VMs and Domain"
            }
        },
        "WitnessName": {
            "type": "String",
            "metadata": {
                "description": "The name of witness"
            }
        },
        "DagName": {
            "defaultValue": "DAG1",
            "type": "String",
            "metadata": {
                "description": "the name of DAG"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "The password for the Administrator account of the new VMs and Domain"
            }
        },
        "lbIpAddress": {
            "type": "string",
            "metadata": {
                "description": "The ip address of load balancer for Exchange web"
            },
            "defaultValue": "10.0.0.186"
        },
        "primaryAD": {
            "type": "string",
            "metadata": {
                "description": "the primary AD of the forest"
            }
        },
        "diagnosticsStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of diagnostic storage account"
            }
        },
        "storageAccountEndPoint": {
            "type": "string",
            "defaultValue": "local.azurestack.external",
            "metadata": {
                "description": "Endpoint domain"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS13_v2",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "[concat('ADStaticSubnet',resourceGroup().name)]",
            "metadata": {
                "description": "The subnet name."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "[concat('ADVNET',resourceGroup().name)]",
            "metadata": {
                "description": "The virtual network name"
            }
        },
        "exchangeNoDisks": {
            "type": "int",
            "defaultValue": 10,
            "minValue": 4,
            "maxValue": 16,
            "metadata": {
                "description": "The number of data disks to use."
            }
        },
        "exchangeStorageSizeInGB": {
            "type": "int",
            "defaultValue": 460,
            "minValue": 10,
            "maxValue": 1024,
            "metadata": {
                "description": "The size of each data disk."
            }
        }
    },
    "variables": {
        "vmCount": 4,
        "exchangePrefix": "[concat(parameters('vmPrefix'),'-ex-')]",
        "vmNicName": "[tolower(concat(variables('exchangePrefix'),'nic-'))]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressName": "[tolower(concat('ip-',variables('exchangePrefix'), resourceGroup().name))]",
        "publicIPAddressType": "Dynamic",
        "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
        "uniqueStorageAccountName": "[tolower(concat('sa-',variables('exchangePrefix'), resourceGroup().name))]",
        "uniqueStorageAccountContainerName": "[tolower(concat('sc-',variables('exchangePrefix'), resourceGroup().name))]",
        "location": "[resourceGroup().location]",
        "vmOsSku": "2016-Datacenter",
        "vmOsDiskName": "[concat('od-',variables('exchangePrefix'), resourceGroup().name)]",
        "vmDataDiskName": "[concat('dd-',variables('exchangePrefix'), resourceGroup().name)]",
        "vmDataDiskSize": "[parameters('exchangeStorageSizeInGB')]",
        "modulesPath": "[concat(parameters('workloadsLocation'),'/')]",
        "modulesExchange": "ExchangeWorkload.ps1.zip",
        "modulesAddExchange": "ExchangeWorkloadAdditional.ps1.zip",
        "modulesAddLastExchange": "ExchangeWorkloadLast.ps1.zip",
        "modulesUrlExchange": "[concat(variables('modulesPath'),variables('modulesExchange'))]",
        "modulesUrlAddExchange": "[concat(variables('modulesPath'),variables('modulesAddExchange'))]",
        "modulesUrlAddLastExchange": "[concat(variables('modulesPath'),variables('modulesAddLastExchange'))]",
        "configurationFunctionExchange": "ExchangeWorkload.ps1\\InstallAndConfigureExchange",
        "configurationFunctionAddExchange": "ExchangeWorkloadAdditional.ps1\\InstallAndConfigureExchange",
        "configurationFunctionAddLastExchange": "ExchangeWorkloadLast.ps1\\InstallAndConfigureExchange",
        "exchangeInstallerPath": "InstallerExchange",
        "modulesExchangeISODownload": "CSDownloadISO.ps1",
        "modulesUrlExchangeISODownload": "[concat(variables('modulesPath'),variables('modulesExchangeISODownload'))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "staticSubnetID": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
        "AzCopyURL": "[concat(variables('modulesPath'),'MicrosoftAzureStorageTools.msi')]",
        "UCMA4URL": "[concat(variables('modulesPath'),'UcmaRuntimeSetup.exe')]",
        "vcredistURL": "[concat(variables('modulesPath'),'vcredist_x64.exe')]",
        "ndp471URL": "[concat(variables('modulesPath'),'NDP471-KB4033342-x86-x64-AllOS-ENU.exe')]",
        "lbName": "[concat('lb-int-exc-',parameters('vmPrefix'))]",
        "lbName2": "[concat('lb-ext-exc-',parameters('vmPrefix'))]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
        "lbID2": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName2'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEndInt')]",
        "frontEndIPConfigID2": "[concat(variables('lbID2'),'/frontendIPConfigurations/LoadBalancerFrontEndExt')]",
        "lbPoolIDInt": "[concat(variables('lbID'),'/backendAddressPools/BackendPoolInt')]",
        "lbPoolIDExt": "[concat(variables('lbID2'),'/backendAddressPools/BackendPoolExt')]",
        "lbProbeID2": "[concat(variables('lbID2'),'/probes/SmtpProbe')]",
        "lbProbeID": "[concat(variables('lbID'),'/probes/HttpsProbe')]",
        "diagnosticStorageUrl": "[concat(parameters('diagnosticsStorageAccountName'),'.blob.',parameters('storageAccountEndPoint'))]",
        "diagnosticStorageId": "[resourceId(ResourceGroup().name, 'Microsoft.Storage/storageAccounts',parameters('diagnosticsStorageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('ExchangeAvailabilitySetName')]",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(tolower(variables('uniqueStorageAccountName')),'-0-',copyIndex())]",
            "copy": {
                "name": "saLoop",
                "count": "[variables('vmCount')]"
            },
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(tolower(variables('uniqueStorageAccountName')),'-1-',copyIndex())]",
            "copy": {
                "name": "saLoop1",
                "count": "[variables('vmCount')]"
            },
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('vmPrefix'),'-dns-ex')]"
                }
            }
        },
        {
            "name": "[variables('lbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[variables('staticSubnetId')]"
                            },
                            "privateIPAddress": "[parameters('lbIpAddress')]",
                            "privateIPAllocationMethod": "Static"
                        },
                        "name": "LoadBalancerFrontendInt"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackendPoolInt"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRuleHttps",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolIDInt')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "HttpsProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 443,
                            "intervalInSeconds": 60,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('lbName2')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('publicIPAddressID')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPAddressID')]"
                            }
                        },
                        "name": "LoadBalancerFrontendExt"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackendPoolExt"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRuleSmtp",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID2')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolIDExt')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 25,
                            "backendPort": 25,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID2')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "SmtpProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 25,
                            "intervalInSeconds": 60,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "sngex",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgsrule",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('vmNicName'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('vmCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('lbName2'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigpublic",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('staticSubnetId')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPoolInt')]"
                                },
                                {
                                    "id": "[concat(variables('lbID2'), '/backendAddressPools/BackendPoolExt')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('exchangePrefix'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "vmLoop",
                "count": "[variables('vmCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/',variables('uniqueStorageAccountName'),'-0-',copyIndex())]",
                "[concat('Microsoft.Storage/storageAccounts/',variables('uniqueStorageAccountName'),'-1-',copyIndex())]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vmNicName'),copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets/', parameters('ExchangeAvailabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('exchangePrefix'),copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true",
                        "enableAutomaticUpdates": false
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('vmOsSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName'),'-0-',copyIndex()),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmOsDiskName'),copyIndex(),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[parameters('exchangeNoDisks')]",
                            "input": {
                                "caching": "None",
                                "diskSizeGB": "[variables('vmDataDiskSize')]",
                                "lun": "[copyIndex('dataDisks')]",
                                "name": "[concat(variables('vmDataDiskName'),copyIndex(),'-', copyIndex('dataDisks'))]",
                                "vhd": {
                                    "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName'),'-1-',copyIndex()),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmDataDiskName'),copyIndex(),'-',copyIndex('DataDisks'),'.vhd')]"
                                },
                                "createOption": "Empty"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNicName'),copyIndex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://',variables('diagnosticStorageUrl'),'/')]"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('exchangePrefix'),copyIndex(),'/IaaSDiagnostics')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "copy": {
                "name": "vmLoop",
                "count": "[variables('vmCount')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Diagnostics",
                "type": "IaaSDiagnostics",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "StorageAccount": "[parameters('diagnosticsStorageAccountName')]",
                    "WadCfg": {
                        "DiagnosticMonitorConfiguration": {
                            "overallQuotaInMB": 5120,
                            "Metrics": {
                                "resourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', variables('exchangePrefix'),copyIndex())]",
                                "MetricAggregation": [
                                    {
                                        "scheduledTransferPeriod": "PT1H"
                                    },
                                    {
                                        "scheduledTransferPeriod": "PT1M"
                                    }
                                ]
                            },
                            "DiagnosticInfrastructureLogs": {
                                "scheduledTransferLogLevelFilter": "Error"
                            },
                            "PerformanceCounters": {
                                "scheduledTransferPeriod": "PT1M",
                                "PerformanceCounterConfiguration": [
                                    {
                                        "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\System\\Processes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Process(_Total)\\Thread Count",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Process(_Total)\\Handle Count",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\System\\System Up Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\System\\Context Switches/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\System\\Processor Queue Length",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\% Committed Bytes In Use",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Available Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Committed Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Cache Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Pages/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Memory\\Page Faults/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Process(_Total)\\Working Set",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                                        "sampleRate": "PT1M"
                                    },
                                    {
                                        "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                                        "sampleRate": "PT1M"
                                    }
                                ]
                            },
                            "WindowsEventLog": {
                                "scheduledTransferPeriod": "PT1M",
                                "DataSource": [
                                    {
                                        "name": "Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                    },
                                    {
                                        "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                                    },
                                    {
                                        "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                    }
                                ]
                            }
                        }
                    }
                },
                "protectedSettings": {
                    "storageAccountName": "[parameters('diagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(variables('diagnosticStorageId'),'2015-06-15').key1]",
                    "storageAccountEndPoint": "[concat('https://',parameters('storageAccountEndPoint'),'/')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('exchangePrefix'),copyIndex(),'/CustomScriptExtension')]",
            "location": "[variables('location')]",
            "copy": {
                "name": "customExtensionLoop",
                "count": "[variables('vmCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),copyIndex())]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),copyIndex(),'/extensions/','IaaSDiagnostics')]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('modulesUrlExchangeISODownload')]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('modulesExchangeISODownload'),' -uri ',parameters('exchangeIsoUrl'),' -destination ',variables('exchangeInstallerPath'),' -urlMSFTAST ',variables('AzCopyURL'),' -urlUCMA4 ',variables('UCMA4URL'),' -urlVcredist ',variables('vcredistURL'),' -urlNDP471 ',variables('ndp471URL'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('exchangePrefix'),'0','/dscExtension')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'0')]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'0','/extensions/','CustomScriptExtension')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('modulesUrlExchange')]",
                    "configurationFunction": "[variables('configurationFunctionExchange')]",
                    "properties": {
                        "DomainName": "[parameters('DomainName')]",
                        "StorageSize": "[parameters('exchangeStorageSizeInGB')]",
                        "VMAdminCreds": {
                            "userName": "[parameters('adminUsername')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        },
                        "Location": "[variables('location')]",
                        "WitnessName": "[parameters('WitnessName')]",
                        "DagName": "[parameters('DagName')]",
                        "InstallerFolder": "[variables('modulesPath')]",
                        "NoOfDisks": "[parameters('exchangeNoDisks')]",
                        "License": "[parameters('licensekey')]",
                        "primaryAD": "[parameters('primaryAD')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('exchangePrefix'),'1/dscExtension')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'1')]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'1/extensions/','CustomScriptExtension')]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'0','/extensions/','dscExtension')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('modulesUrlAddExchange')]",
                    "configurationFunction": "[variables('configurationFunctionAddExchange')]",
                    "properties": {
                        "DomainName": "[parameters('DomainName')]",
                        "StorageSize": "[parameters('exchangeStorageSizeInGB')]",
                        "VMAdminCreds": {
                            "userName": "[parameters('adminUsername')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        },
                        "Location": "[variables('location')]",
                        "WitnessName": "[parameters('WitnessName')]",
                        "DagName": "[parameters('DagName')]",
                        "InstallerFolder": "[variables('modulesPath')]",
                        "NoOfDisks": "[parameters('exchangeNoDisks')]",
                        "License": "[parameters('licensekey')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('exchangePrefix'),'2/dscExtension')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'2')]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'2/extensions/','CustomScriptExtension')]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'1','/extensions/','dscExtension')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('modulesUrlAddExchange')]",
                    "configurationFunction": "[variables('configurationFunctionAddExchange')]",
                    "properties": {
                        "DomainName": "[parameters('DomainName')]",
                        "StorageSize": "[parameters('exchangeStorageSizeInGB')]",
                        "VMAdminCreds": {
                            "userName": "[parameters('adminUsername')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        },
                        "Location": "[variables('location')]",
                        "WitnessName": "[parameters('WitnessName')]",
                        "DagName": "[parameters('DagName')]",
                        "InstallerFolder": "[variables('modulesPath')]",
                        "NoOfDisks": "[parameters('exchangeNoDisks')]",
                        "License": "[parameters('licensekey')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('exchangePrefix'),'3/dscExtension')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'3')]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'3/extensions/','CustomScriptExtension')]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),'2','/extensions/','dscExtension')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('modulesUrlAddLastExchange')]",
                    "configurationFunction": "[variables('configurationFunctionAddLastExchange')]",
                    "properties": {
                        "DomainName": "[parameters('DomainName')]",
                        "StorageSize": "[parameters('exchangeStorageSizeInGB')]",
                        "VMAdminCreds": {
                            "userName": "[parameters('adminUsername')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        },
                        "Location": "[variables('location')]",
                        "WitnessName": "[parameters('WitnessName')]",
                        "DagName": "[parameters('DagName')]",
                        "InstallerFolder": "[variables('modulesPath')]",
                        "NoOfDisks": "[parameters('exchangeNoDisks')]",
                        "License": "[parameters('licensekey')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('exchangePrefix'),copyIndex(),'/', 'IaaSAntimalware')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoop",
                "count": "[variables('vmCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('exchangePrefix'),copyIndex(),'/extensions/','dscExtension')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Security",
                "type": "IaaSAntimalware",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "AntimalwareEnabled": true,
                    "RealtimeProtectionEnabled": "true",
                    "ScheduledScanSettings": {
                        "isEnabled": "true",
                        "scanType": "Quick",
                        "day": "7",
                        "time": "120"
                    }
                }
            }
        }
    ]
}