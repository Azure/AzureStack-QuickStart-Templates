{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-03-01-hybrid",
    "parameters": {
        "AdCsAvailabilitySetName": {
            "defaultValue": "AdCrtSet",
            "type": "string",
            "metadata": {
                "description": "The name of availability set for AD CS"
            }
        },
        "domainName": {
            "defaultValue": "contoso.com",
            "type": "string",
            "metadata": {
                "description": "The domain name needs to be consisting of one or more labels separated by . E.g. contoso.com"
            }
        },
        "workloadsLocation": {
            "defaultValue": "https://colab.blob.local.azurestack.external/workload",
            "type": "string",
            "metadata": {
                "description": "Location of workloads"
            }
        },
		"vmPrefix": {
            "defaultValue": "srv",
            "type": "string",
            "minLength": 3,
            "maxLength": 8,
            "metadata": {
                "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
            }
        },
        "adminUsername": {
            "defaultValue": "lcladmin",
            "type": "string",
            "metadata": {
                "description": "The name of the Administrator of the new VMs and Domain"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the Administrator account of the new VMs and Domain"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D1",
            "metadata": {
                "desription": "The size of the CA VM"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "[concat('ADStaticSubnet',resourceGroup().name)]",
            "metadata": {
                "description": "The subnet name."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "[concat('ADVNET',resourceGroup().name)]",
            "metadata": {
                "description": "The virtual network name"
              }
        },
        "diagnosticsStorageAccountName": {
          "type": "string",
          "metadata": {
            "description": "Name of diagnostic storage account"
          }
        },
        "storageAccountEndPoint": {
          "type": "string",
          "defaultValue": "local.azurestack.external",
          "metadata": {
            "description": "Endpoint domain"
          }
        }
    },
    "variables": {
        "crtPrefix": "[concat(parameters('vmPrefix'),'-adcs')]",
        "vmNicName": "[tolower(concat(variables('crtPrefix'),'-nic'))]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "storageAccountType": "Standard_LRS",
        "uniqueStorageAccountName": "[tolower(concat('sa-',variables('crtPrefix'),'-', resourceGroup().name))]",
        "uniqueStorageAccountContainerName": "[tolower(concat('sc-',variables('crtPrefix'), resourceGroup().name))]",
        "location": "[resourceGroup().location]",
        "vmOsSku": "2016-Datacenter",
        "vmOsDiskName": "[concat('od-',variables('crtPrefix'), resourceGroup().name)]",
        "nsgName": "[concat('ADCSNsg',resourceGroup().name)]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "staticSubnetID": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
        "ModulesURL": "[concat(parameters('workloadsLocation'),'/CreateADCertAuth.ps1.zip')]",
        "ConfigurationFunction": "CreateADCertAuth.ps1\\CreateADCertAuth",
        "diagnosticStorageUrl": "[concat(parameters('diagnosticsStorageAccountName'),'.blob.',parameters('storageAccountEndPoint'))]",
        "diagnosticStorageId": "[resourceId(ResourceGroup().name, 'Microsoft.Storage/storageAccounts',parameters('diagnosticsStorageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('AdCsAvailabilitySetName')]",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[tolower(variables('uniqueStorageAccountName'))]",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgsrule",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('vmNicName'))]",
            "dependsOn": [
                "[variables('nsgID')]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigpublic",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('staticSubnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('crtPrefix'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/',variables('uniqueStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vmNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets/', parameters('AdCsAvailabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('crtPrefix'))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                      "provisionVmAgent": "true",
                      "enableAutomaticUpdates": false
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('vmOsSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmOsDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNicName')))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                      "enabled": true,
                      "storageUri": "[concat('https://',variables('diagnosticStorageUrl'),'/')]"
                    }
                  }
            }
        },
        {
            "name": "[concat(variables('crtPrefix'),'/IaaSDiagnostics')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/',variables('crtPrefix'))]"
            ],
            "properties": {
              "publisher": "Microsoft.Azure.Diagnostics",
              "type": "IaaSDiagnostics",
              "typeHandlerVersion": "1.5",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "StorageAccount": "[parameters('diagnosticsStorageAccountName')]",
                "WadCfg": {
                  "DiagnosticMonitorConfiguration": {
                    "overallQuotaInMB": 5120,
                    "Metrics": {
                      "resourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/',variables('crtPrefix'))]",
                      "MetricAggregation": [
                        {
                          "scheduledTransferPeriod": "PT1H"
                        },
                        {
                          "scheduledTransferPeriod": "PT1M"
                        }
                      ]
                    },
                    "DiagnosticInfrastructureLogs": {
                      "scheduledTransferLogLevelFilter": "Error"
                    },
                    "PerformanceCounters": {
                      "scheduledTransferPeriod": "PT1M",
                      "PerformanceCounterConfiguration": [
                        {
                          "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\System\\Processes",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Process(_Total)\\Thread Count",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Process(_Total)\\Handle Count",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\System\\System Up Time",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\System\\Context Switches/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\System\\Processor Queue Length",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Memory\\% Committed Bytes In Use",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Memory\\Available Bytes",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Memory\\Committed Bytes",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Memory\\Cache Bytes",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Memory\\Pages/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Memory\\Page Faults/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Process(_Total)\\Working Set",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                          "sampleRate": "PT1M"
                        },
                        {
                          "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                          "sampleRate": "PT1M"
                        }
                      ]
                    },
                    "WindowsEventLog": {
                      "scheduledTransferPeriod": "PT1M",
                      "DataSource": [
                        {
                          "name": "Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                        },
                        {
                          "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                        },
                        {
                          "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                        }
                      ]
                    }
                  }
                }
              },
              "protectedSettings": {
                "storageAccountName": "[parameters('diagnosticsStorageAccountName')]",
                "storageAccountKey": "[listKeys(variables('diagnosticStorageId'),'2015-06-15').key1]",
                "storageAccountEndPoint": "[concat('https://',parameters('storageAccountEndPoint'),'/')]"
              }
            }
        },
        {
            "name": "[concat(variables('crtPrefix'),'/dscExtension')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[resourceGroup().location]",
             "dependsOn": [ 
                "[concat('Microsoft.Compute/virtualMachines/',variables('crtPrefix'))]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('crtPrefix'),'/extensions/','IaaSDiagnostics')]"
            ], 
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.76",
                "autoUpgradeMinorVersion": "true",
                "settings": {
                    "modulesUrl": "[variables('ModulesURL')]",
                    "configurationFunction": "[variables('ConfigurationFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        }
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        { 
            "type": "Microsoft.Compute/virtualMachines/extensions", 
            "name": "[concat(variables('crtPrefix'),'/', 'IaaSAntimalware')]", 
            "location": "[resourceGroup().location]", 
            "dependsOn": [ 
                        "[concat('Microsoft.Compute/virtualMachines/',variables('crtPrefix'),'/extensions/','dscExtension')]"
                    ], 
                    "properties": { 
                        "publisher": "Microsoft.Azure.Security", 
                        "type": "IaaSAntimalware", 
                        "typeHandlerVersion": "1.4", 
                        "autoUpgradeMinorVersion": true, 
                        "settings": { 
                            "AntimalwareEnabled": true, 
                            "RealtimeProtectionEnabled": "true", 
                            "ScheduledScanSettings": { 
                                "isEnabled": "true", 
                                "scanType": "Quick", 
                                "day": "7", 
                                "time": "120" 
                             } 
                        } 
                    }      
        }

    ]
}
