{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"authenticationSettings": {
			"type": "secureObject"
		},
		"vlVmssSettings": {
			"type": "object"
		},
		"ubuntuImage": {
			"type": "object"
		},
		"location": {
			"type": "string"
		},
		"suffix": {
			"type": "string"
		},
		"vnetName": {
			"type": "string"
		},
		"omsWorkspaceId": {
			"type": "string"
		},
		"omsPrimaryKey": {
			"type": "securestring"
		},
		"mustDeployVnetGateway": {
			"type": "bool"
		}
	},
	"variables": {
		"linuxConfiguration": {
			"disablePasswordAuthentication": true,
			"ssh": {
				"publicKeys": [
					{
						"path": "[concat('/home/',variables('adminUsername'),'/.ssh/authorized_keys')]",
						"keyData": "[variables('sshPublicKey')]"
					}
				]
			}
		},
		"vlOsProfile": {
			"computerNamePrefix": "[variables('vlVmssName')]",
			"adminUsername": "[variables('adminUsername')]",
			"adminPassword": "[variables('adminPassword')]",
			"customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5yOwUrDUBBF9/mKoQhdJfMFLmrMQhBBa3dCGSejefDy5jEzqeLXi3VhydL9Oede4UlhezdXtYCYBEw1oN9BKHioSbdtfBkVuAKeyDCnV/wgepcS2ItFektMId5VmQEXN8zKlNEnMkGmli8gpC+/kDq2+K0vdaSQdoU3jXyejz0Nj4dh/7w/9rvjzeHh9n64RglG94w/gq+H/souI7QJWoHNyxX9K7SBMyPllEzLLCW+AwAA//8nbcUONgEAAA==\n\nruncmd:\n  - /opt/azure/containers/script.sh'))]",
			"linuxConfiguration": "[if(equals(variables('authenticationType'), 'sshPublicKey'), variables('linuxConfiguration'), json('null'))]"
		},
		"authenticationType": "[parameters('authenticationSettings').authenticationType]",
		"sshPublicKey": "[parameters('authenticationSettings').sshPublicKey]",
		"adminUsername": "[parameters('authenticationSettings').adminUsername]",
		"adminPassword": "[parameters('authenticationSettings').adminPassword]",
		"vlVmssName": "[concat(parameters('vlVmssSettings').vmssName, '-',parameters('suffix'))]",
		"vlNodeVMSize": "[parameters('vlVmssSettings').nodeVMSize]",
		"vlCapacity": "[parameters('vlVmssSettings').vlCapacity]",
		"vlStorageAccountType": "[parameters('vlVmssSettings').storageAccountType]",
		"vlNicName": "[parameters('vlVmssSettings').nicName]",
		"vlIpConfigName": "[parameters('vlVmssSettings').ipConfigName]",
		"vnetName": "[parameters('vnetName')]",
		"vlSubnetName": "[parameters('vlVmssSettings').subnetName]",
		"loadBalancerName": "[concat(parameters('vlVmssSettings').loadBalancerName,'-',parameters('suffix'))]",
		"lbBackendAddressPoolName": "[parameters('vlVmssSettings').loadBalancerBackendAddressPoolName]",
		"lbInboundNatRuleNamePrefix": "[parameters('vlVmssSettings').loadBalancerInboundNatRuleNamePrefix]",
		"publicIpConfiguration": [
			{
				"name": "[variables('vlIpConfigName')]",
				"properties": {
					"subnet": {
						"id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vnetName')),'/subnets/',variables('vlSubnetName'))]"
					},
					"loadBalancerBackendAddressPools": [
						{
							"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/',variables('lbBackendAddressPoolName'))]"
						}
					],
					"loadBalancerInboundNatPools": [
						{
							"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/inboundNatPools/',variables('lbInboundNatRuleNamePrefix'))]"
						}
					]
				}
			}
		],
		"gatewayIpConfiguration":[
			{
				"name": "[variables('vlIpConfigName')]",
				"properties": {
					"subnet": {
						"id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vnetName')),'/subnets/',variables('vlSubnetName'))]"
					},
					"loadBalancerBackendAddressPools": [
						{
							"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/',variables('lbBackendAddressPoolName'))]"
						}
					],
					"loadBalancerInboundNatPools": [
						{
							"id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/inboundNatPools/',variables('lbInboundNatRuleNamePrefix'))]"
						}
					]
				}
			}
		]
	},
	"resources": [
		{
			"type": "Microsoft.Compute/virtualMachineScaleSets",
			"name": "[variables('vlVmssName')]",
			"location": "[parameters('location')]",
			"apiVersion": "2017-03-30",
			"sku": {
				"name": "[variables('vlNodeVMSize')]",
				"tier": "Standard",
				"capacity": "[variables('vlCapacity')]"
			},
			"properties": {
				"singlePlacementGroup": true,
				"overprovision": false,
				"upgradePolicy": {
					"mode": "Automatic"
				},
				"virtualMachineProfile": {
					"storageProfile": {
						"osDisk": {
							"createOption": "FromImage",
							"caching": "ReadWrite",
							"managedDisk": {
								"storageAccountType": "[variables('vlStorageAccountType')]"
							}
						},
						"imageReference": "[parameters('ubuntuImage')]"
					},
					"osProfile": "[variables('vlOsProfile')]",
					"networkProfile": {
						"networkInterfaceConfigurations": [
							{
								"name": "[variables('vlNicName')]",
								"properties": {
									"primary": true,
									"ipConfigurations": "[if(parameters('mustDeployVnetGateway'), variables('gatewayIpConfiguration'), variables('publicIpConfiguration'))]"
								}
							}
						]
					}
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
			"name": "[concat(variables('vlVmssName'),'/omsAgentDeploy')]",
			"apiVersion": "2017-03-30",
			"dependsOn": [
				"[variables('vlVmssName')]"
			],
			"condition": "[not(empty( parameters('omsWorkspaceId')))]",
			"location": "[parameters('location')]",
			"properties": {
				"publisher": "Microsoft.EnterpriseCloud.Monitoring",
				"type": "OmsAgentForLinux",
				"typeHandlerVersion": "1.4",
				"settings": {
					"workspaceId": "[parameters('omsWorkspaceId')]"
				},
				"protectedSettings": {
					"workspaceKey": "[parameters('omsPrimaryKey')]"
				}
			}
		}
	],
	"outputs": {
		"Result": {
			"type": "object",
			"value": {
				"name": "[variables('vlVmssName')]",
				"vmssPrincipalId": ""
			}
		}
	}
}